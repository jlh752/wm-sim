(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))a(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();const g={FORCE:0,BOOSTS:1,REINFORCEMENTS:2};function $(o,e){var t;if(!o)return o;if(typeof o.force=="string"){const a={version:1,units:[],reinforcements:[]};let n=g.FORCE;const r=o.force.split(",").map(i=>parseInt(i));if(r.length>1){a.version=r[0];const i=Object.keys(e.types).map(l=>parseInt(l)).find(l=>e.types[l].name==="Boost");for(let l=1;l<r.length;l++){const u=r[l];if(n!==g.REINFORCEMENTS){const h=(t=e.units[u])==null?void 0:t.type;n===g.BOOSTS&&h!==i?n=g.REINFORCEMENTS:n===g.FORCE&&(h===i||u===0)&&(n=g.BOOSTS)}u in e.units&&(n===g.REINFORCEMENTS?a.reinforcements.push(u):a.units.push(u))}}o.force=a}if(typeof o.reinforcementConstraints=="string"){const a=[],n=o.reinforcementConstraints.split(";");for(const r of n){const[i,l]=r.split("|");a.push({unit:parseInt(i,10),count:parseInt(l,10)})}o.reinforcementConstraints=a}return o}function b(o,e){return o+(e-o)*Math.random()}function R(o){var e=Math.floor(o);return e===o?o:o-e!==.5?Math.round(o):e%2==0?e+1:e}function P(o,e){return!(e.target_type&&e.target_type!==o.definition.type||e.target_subtype&&e.target_subtype!==o.definition.sub_type&&e.target_subtype!==o.definition.sub_type2||e.target_unit&&e.target_unit!==o.unitId)}function L(o){return 1-o<=Math.random()}const x=89.77,I=1e6,w=10;class O{constructor(e,t,a){if(this.other=void 0,this.unboostAttackMultiplier=1,this.unboostDefenseMultiplier=1,this.preventHeal=0,this.preventJams=0,this.preventReinforcements=0,this.preventControls=0,this.jammed=0,this.reinforced=0,this.shield=0,this.antishield=0,this.totalDamage=0,this.totalHeal=0,this.unitModifiers={},this.typeModifiers={},this.subtypeModifiers={},this.requirementsData={units:{},types:{},subtypes:{}},this.unitsToSummon=[],this._data=t,this.force=typeof e.force!="string"?e.force.units.filter(i=>i in t.units).map(i=>({unitId:i,definition:this._data.units[i]})):[],this.reinforcements=typeof e.force!="string"?e.force.reinforcements.filter(i=>i in t.units).map(i=>({unitId:i,definition:this._data.units[i]})):[],this.reinforcementConstraints={},e.reinforcementConstraints&&typeof e.reinforcementConstraints!="string")for(let i=0;i<e.reinforcementConstraints.length;i++){const l=e.reinforcementConstraints[i];this.reinforcementConstraints[l.unit]=l.count}this.populateRequirementsData();const n=w*this.force.reduce((i,l)=>i+(l.definition.attack||0),0);this.baseAttack=e.power+n,this.attack=this.baseAttack;const r=w*this.force.reduce((i,l)=>i+(l.definition.defense||0),0);this.baseDefense=e.power+r,this.defense=this.baseDefense,this.index=a}addDamage(e,t,a=0){var u,h,p,s,c,f,_,D;let n=1,r=0;const i=this.antishield,l=Math.max(this.other.shield-i,0);if(t!==0){n+=((u=this.unitModifiers[e.unitId])==null?void 0:u.multiplier)||0,r+=((h=this.subtypeModifiers[e.unitId])==null?void 0:h.fixed)||0,e.definition.type&&(r+=((p=this.typeModifiers[e.definition.type])==null?void 0:p.fixed)||0,n+=((s=this.typeModifiers[e.definition.type])==null?void 0:s.multiplier)||0),e.definition.sub_type&&(r+=((c=this.subtypeModifiers[e.definition.sub_type])==null?void 0:c.fixed)||0,n+=((f=this.subtypeModifiers[e.definition.sub_type])==null?void 0:f.multiplier)||0),e.definition.sub_type2&&(r+=((_=this.subtypeModifiers[e.definition.sub_type2])==null?void 0:_.fixed)||0,n+=((D=this.subtypeModifiers[e.definition.sub_type2])==null?void 0:D.multiplier)||0);const N=R(t*n+r-l);for(let H=0;H<a;H++)this.totalDamage+=N;return{value:N,added:r,reduced:l}}return{value:0,added:0,reduced:0}}addHeal(e,t=0){const a=R(e)*(t||1);if(a>0&&this.other){const n=this.other.preventHeal||0;if(n>a)return this.other.preventHeal-=a,{value:0,prevented:a};{const r=a-this.other.preventHeal;return this.other.preventHeal=0,this.totalHeal+=r,{value:r,prevented:n}}}return this.totalHeal+=a,{value:a,prevented:0}}addUnitModifier(e,t){this.alterModifier(e,"unitModifiers",{fixed:t})}multiplyUnitModifier(e,t){this.alterModifier(e,"unitModifiers",{multiplier:t})}addTypeModifier(e,t){this.alterModifier(e,"typeModifiers",{fixed:t})}multiplyTypeModifier(e,t){this.alterModifier(e,"typeModifiers",{multiplier:t})}addSubtypeModifier(e,t){this.alterModifier(e,"subtypeModifiers",{fixed:t})}multiplySubtypeModifier(e,t){this.alterModifier(e,"subtypeModifiers",{multiplier:t})}alterModifier(e,t,a){e in this[t]||(this[t][e]={multiplier:0,fixed:0}),this[t][e].multiplier+=a.multiplier??0,this[t][e].fixed+=a.fixed??0}addAttack(e){this.attack=Math.min(2*this.baseAttack,this.attack+e)}multiplyAttack(e){this.attack=Math.min(2*this.baseAttack,this.attack*(1+e))}unboostAttack(e){this.unboostAttackMultiplier*=1-e}getAttack(){return this.baseAttack+(this.attack-this.baseAttack)*Math.max(0,this.unboostAttackMultiplier)}addDefense(e){this.defense=Math.min(2*this.baseDefense,this.defense+e)}multiplyDefense(e){this.defense=Math.min(2*this.baseDefense,this.defense*(1+e))}unboostDefense(e){this.unboostDefenseMultiplier*=1-e}getDefense(){return this.baseDefense+(this.defense-this.baseDefense)*Math.max(0,this.unboostDefenseMultiplier)}addUnit(e){this.force.push(e),this.addUnitToRequirementsData(e.unitId),this.addAttack(10*(e.definition.attack||0)),this.addDefense(10*(e.definition.defense||0))}removeUnit(e){if(e<0||e>=this.force.length)return;const t=this.force.splice(e,1)[0];return this.removeUnitFromRequirementsData(t.unitId),t}summonUnit(e){this.unitsToSummon.push(e)}phaseComplete(){for(let e=0;e<this.unitsToSummon.length;e++)this.force.unshift(this.unitsToSummon[e]),this.addAttack(10*(this.unitsToSummon[e].definition.attack||0)),this.addDefense(10*(this.unitsToSummon[e].definition.defense||0)),this.addUnitToRequirementsData(this.unitsToSummon[e].unitId);this.unitsToSummon=[]}populateRequirementsData(){this.requirementsData={units:{},types:{},subtypes:{}};for(const e in this._data.types)this.requirementsData.types[e]=0;for(const e in this._data.subtypes)this.requirementsData.subtypes[e]=0;for(let e=0;e<this.force.length;e++)this.addUnitToRequirementsData(this.force[e].unitId)}addUnitToRequirementsData(e){if(e<10)return;this.requirementsData.units[e]?this.requirementsData.units[e]++:this.requirementsData.units[e]=1;const t=this._data.units[e];t.type&&this.requirementsData.types[t.type]++,t.sub_type&&this.requirementsData.types[t.sub_type]++,t.sub_type2&&this.requirementsData.types[t.sub_type2]++}removeUnitFromRequirementsData(e){if(e<10)return;this.requirementsData.units[e]&&this.requirementsData.units[e]--;const t=this._data.units[e];t.type&&this.requirementsData.types[t.type]--,t.sub_type&&this.requirementsData.types[t.sub_type]--,t.sub_type2&&this.requirementsData.types[t.sub_type2]--}checkRequirements(e){const t=this._data.skills[e];return t.requirements?t.requirements.every(a=>{const n=this.requirementsData;return(!a.unit_id||n.units[a.unit_id]>=a.count)&&(!a.type_id||n.types[a.type_id]>=a.count)&&(!a.subtype_id||n.subtypes[a.subtype_id]>=a.count)}):!0}getRequirementsCount(e,t,a){return(e?this.requirementsData.units[e]:0)+(t?this.requirementsData.types[t]:0)+(a?this.requirementsData.subtypes[a]:0)}}class B{constructor(e){this.player1=new O(e.player1,e.data,0),this.player2=new O(e.player2,e.data,1),this.player1.other=this.player2,this.player2.other=this.player1,this.maxBase=Math.round(2*320*Math.log10((e.player2.level||1e3)/100)+30),this.maxBase!=0&&(e.epicMode?this.maxBase=30:this.maxBase=Math.max(this.maxBase,30))}forPlayer(e){return e===0?this.player1:this.player2}}const m={NONE:-1,PRE:0,JAM:1,CONTROL:2,SPECIAL:3,MAIN:4},k=[m.PRE,m.JAM,m.CONTROL,m.SPECIAL,m.MAIN],d={DAMAGE:"D",HEAL:"H",JAM:"J",CONTROL:"C",PREVENT_JAM:"PJ",PREVENT_CONTROL:"PC",PREVENT_REINFORCEMENT:"PR",PREVENT_HEAL:"PH",ATTACK_POWER:"AP",DEFENSE_POWER:"DP",DAMAGE_BOOST:"DB",REINFORCE:"R",SUMMON:"S",RALLY:"RA",REDUCE:"RE",ANTISHIELD:"AS",UNBOOST_ATTACK:"UA",UNBOOST_DEFENSE:"UD"};class U{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["damage","epic_damage"],this.handler=(e,t,a,n,r)=>{var u;const i=(t.damage||0)+(e.config.epicMode&&t.epic_damage||0),l=a.addDamage(n,R(b(i*.5,i*1.5)),t.flurry||1);l.value!==0&&((u=e.result)==null||u.logs.push({...r,type:d.DAMAGE,amount:l.value,reduced:l.reduced,rally:l.added,flurry:t.flurry}))}}}class F{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["heal","epic_heal"],this.handler=(e,t,a,n,r)=>{var u;const i=((t==null?void 0:t.heal)||0)+(e.config.epicMode&&t.epic_heal||0),l=a.addHeal(i,t.flurry||1);l.value!==0&&((u=e.result)==null||u.logs.push({...r,type:d.HEAL,amount:l.value,prevented:l.prevented,flurry:t.flurry}))}}}let j=class{constructor(){this.applicablePhase=m.PRE,this.applicableTags=["antijam"],this.handler=(e,t,a,n,r)=>{var i;a.preventJams+=t.antijam,(i=e.result)==null||i.logs.push({...r,type:d.PREVENT_JAM,amount:t.antijam})}}};class q{constructor(){this.applicablePhase=m.PRE,this.applicableTags=["anticontrol"],this.handler=(e,t,a,n,r)=>{var i;a.preventControls+=t.anticontrol,(i=e.result)==null||i.logs.push({...r,type:d.PREVENT_CONTROL,amount:t.anticontrol})}}}class V{constructor(){this.applicablePhase=m.PRE,this.applicableTags=["antireinforce"],this.handler=(e,t,a,n,r)=>{var i;a.preventReinforcements+=t.antireinforce,(i=e.result)==null||i.logs.push({...r,type:d.PREVENT_REINFORCEMENT,amount:t.antireinforce})}}}class J{constructor(){this.applicablePhase=m.PRE,this.applicableTags=["summon"],this.handler=(e,t,a,n,r)=>{var i,l,u;if(e.config&&t.unit_id&&t.unit_id in((i=e.config)==null?void 0:i.data.units)){const h=(l=e.config)==null?void 0:l.data.units[t.unit_id];for(let p=0;p<t.summon;p++)a.summonUnit({unitId:t.unit_id,definition:h,isReinforced:!0});(u=e.result)==null||u.logs.push({...r,type:d.SUMMON,amount:t.summon,target_unit_id:t.unit_id})}}}}class G{constructor(){this.applicablePhase=m.JAM,this.applicableTags=["jamming"],this.handler=(e,t,a,n,r)=>{var u,h;let i=t.jamming;const l=[];for(let p=0;p<a.other.force.length;p++){const s=a.other.force[p];if(P(s,{target_type:t.unit_type,target_subtype:t.unit_subtype,target_unit:t.unit_id})&&s.definition.defense&&s.definition.defense>0&&!s.definition.no_jam)for(;i>0;)if(a.other.preventJams==0){a.other.jammed++,l.unshift(p),(u=e.result)==null||u.logs.push({...r,type:d.JAM,target_unit_id:s.unitId,success:!0}),i--;break}else a.other.preventJams--,(h=e.result)==null||h.logs.push({...r,type:d.JAM,target_unit_id:s.unitId,success:!1}),i--;if(i===0)break}l.forEach(p=>{var s;return(s=a.other)==null?void 0:s.removeUnit(p)})}}}class W{constructor(){this.applicablePhase=m.CONTROL,this.applicableTags=["control"],this.handler=(e,t,a,n,r)=>{var h,p;let i=t.control;const l=[],u=a.other.force.map((s,c)=>({slot:c,unit:s})).filter(s=>P(s.unit,{target_type:t.unit_type,target_subtype:t.unit_subtype,target_unit:t.unit_id})&&!s.unit.definition.no_control);u.sort(function(s,c){return s.unit.definition.level===c.unit.definition.level?s.unit.unitId-c.unit.unitId:(c.unit.definition.level||0)-(s.unit.definition.level||0)});for(let s=0;s<u.length&&i>0;s++)i--,a.other.preventControls==0?(l.push(u[s].slot),(h=e.result)==null||h.logs.push({...r,type:d.CONTROL,target_unit_id:u[s].unit.unitId,success:!0})):(a.other.preventControls--,(p=e.result)==null||p.logs.push({...r,type:d.CONTROL,target_unit_id:u[s].unit.unitId,success:!1}));l.sort((s,c)=>c-s).forEach(s=>{const c=a.other.removeUnit(s);c&&(c.isReinforced=!0,a.addUnit(c))})}}}class Y{constructor(){this.applicablePhase=m.SPECIAL,this.applicableTags=["antiheal","epic_antiheal"],this.handler=(e,t,a,n,r)=>{var l,u;const i=(t.antiheal||0)+((l=e.config)!=null&&l.epicMode&&t.epic_antiheal||0);a.preventHeal+=i,(u=e.result)==null||u.logs.push({...r,type:d.PREVENT_HEAL,amount:i})}}}class K{constructor(){this.applicablePhase=m.SPECIAL,this.applicableTags=["attack"],this.handler=(e,t,a,n,r)=>{var i;a.multiplyAttack(t.attack),(i=e.result)==null||i.logs.push({...r,type:d.ATTACK_POWER,amount:t.attack})}}}class z{constructor(){this.applicablePhase=m.SPECIAL,this.applicableTags=["defense"],this.handler=(e,t,a,n,r)=>{var i;a.multiplyDefense(t.defense),(i=e.result)==null||i.logs.push({...r,type:d.DEFENSE_POWER,amount:t.defense})}}}class X{constructor(){this.applicablePhase=m.SPECIAL,this.applicableTags=["support_bonus"],this.handler=(e,t,a,n,r)=>{var i;t.unit_type?a.multiplyTypeModifier(t.unit_type,t.support_bonus):t.unit_subtype?a.multiplySubtypeModifier(t.unit_subtype,t.support_bonus):t.unit_id&&a.multiplyUnitModifier(t.unit_id,t.support_bonus),(i=e.result)==null||i.logs.push({...r,type:d.DAMAGE_BOOST,amount:t.support_bonus,target_unit:t.unit_id,target_type:t.unit_type,target_subtype:t.unit_subtype})}}}class Q{constructor(){this.applicablePhase=m.SPECIAL,this.applicableTags=["reinforce"],this.handler=(e,t,a,n,r)=>{var h;if(!a.other)return;const i={...r,type:d.REINFORCE,instances:[]},l=[];let u=t.reinforce;for(let p=0;p<a.reinforcements.length;p++){const s=a.reinforcements[p];if(P(s,{target_type:t.unit_type,target_subtype:t.unit_subtype,target_unit:t.unit_id}))if(s.definition.unique){if(a.force.some(c=>c.unitId===s.unitId))continue;a.other.preventReinforcements>0?(a.other.preventReinforcements--,i.instances.push({success:!1,amount:1,target_unit_id:s.unitId})):(a.addUnit({unitId:s.unitId,definition:s.definition,isReinforced:!0}),a.reinforced++,i.instances.push({success:!0,amount:1,target_unit_id:s.unitId}),l.unshift(p)),u--}else{let c=u;t.unit_id&&t.unit_id in a.reinforcementConstraints&&(c=Math.min(u,a.reinforcementConstraints[t.unit_id]),c===u&&l.unshift(p));const f=Math.min(a.other.preventReinforcements,c),_=c-f;if(f>0&&(a.other.preventReinforcements-=f,i.instances.push({success:!1,amount:f,target_unit_id:s.unitId})),_>0){i.instances.push({success:!0,amount:_,target_unit_id:s.unitId});for(let D=0;D<_;D++)a.addUnit({unitId:s.unitId,definition:s.definition,isReinforced:!0}),a.reinforced++}u-=c}if(u===0)break}l.forEach(p=>{var s;return(s=a.other)==null?void 0:s.removeUnit(p)}),(h=e.result)==null||h.logs.push(i)}}}class Z{constructor(){this.applicablePhase=m.SPECIAL,this.applicableTags=["rally"],this.handler=(e,t,a,n,r)=>{var i;t.unit_type?a.addTypeModifier(t.unit_type,t.rally):t.unit_subtype?a.addSubtypeModifier(t.unit_subtype,t.rally):t.unit_id&&a.addUnitModifier(t.unit_id,t.rally),(i=e.result)==null||i.logs.push({...r,type:d.RALLY,amount:t.rally,target_unit:t.unit_id,target_type:t.unit_type,target_subtype:t.unit_subtype})}}}class ee{constructor(){this.applicablePhase=m.SPECIAL,this.applicableTags=["shield"],this.handler=(e,t,a,n,r)=>{var i;a.shield+=t.shield,(i=e.result)==null||i.logs.push({...r,type:d.REDUCE,amount:t.shield})}}}class te{constructor(){this.applicablePhase=m.SPECIAL,this.applicableTags=["antishield"],this.handler=(e,t,a,n,r)=>{var i;a.antishield+=t.antishield,(i=e.result)==null||i.logs.push({...r,type:d.ANTISHIELD,amount:t.antishield})}}}class ae{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["var_heal"],this.handler=(e,t,a,n,r)=>{var h;const i=a.getRequirementsCount(t.unit_id,t.unit_type,t.unit_subtype),l=b(.5*t.var_heal*i,1.5*t.var_heal*i),u=a.addHeal(t.heal_cap?Math.min(t.heal_cap,l):l,t.flurry||1);u.value!==0&&((h=e.result)==null||h.logs.push({...r,type:d.HEAL,amount:u.value,prevented:u.prevented,flurry:t.flurry}))}}}class se{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["var_damage"],this.handler=(e,t,a,n,r)=>{var h;const i=a.other.getRequirementsCount(t.unit_id,t.unit_type,t.unit_subtype),l=b(.5*t.var_damage*i,1.5*t.var_damage*i),u=a.addDamage(n,t.damage_cap?Math.min(t.damage_cap,l):l,t.flurry||1);u.value!==0&&((h=e.result)==null||h.logs.push({...r,type:d.DAMAGE,amount:u.value,reduced:u.reduced,rally:u.added,flurry:t.flurry}))}}}class ie{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["reinforce_damage"],this.handler=(e,t,a,n,r)=>{var h,p;const l=(((h=a.other)==null?void 0:h.reinforced)||0)*(b(100*.5*t.reinforce_damage,100*1.5*t.reinforce_damage)/100),u=a.addDamage(n,t.damage_cap?Math.min(t.damage_cap,l):l,t.flurry||1);u.value!==0&&((p=e.result)==null||p.logs.push({...r,type:d.DAMAGE,amount:u.value,reduced:u.reduced,rally:u.added,flurry:t.flurry}))}}}class ne{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["jam_damage"],this.handler=(e,t,a,n,r)=>{var h;const l=(a.jammed||0)*(b(100*.5*t.jam_damage,100*1.5*t.jam_damage)/100),u=a.addDamage(n,t.damage_cap?Math.min(t.damage_cap,l):l,t.flurry||1);u.value!==0&&((h=e.result)==null||h.logs.push({...r,type:d.DAMAGE,amount:u.value,reduced:u.reduced,rally:u.added,flurry:t.flurry}))}}}class re{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["enemy_jam_damage"],this.handler=(e,t,a,n,r)=>{var h;const l=(a.other.jammed||0)*(b(100*.5*t.enemy_jam_damage,100*1.5*t.enemy_jam_damage)/100),u=a.addDamage(n,t.damage_cap?Math.min(t.damage_cap,l):l,t.flurry||1);u.value!==0&&((h=e.result)==null||h.logs.push({...r,type:d.DAMAGE,amount:u.value,reduced:u.reduced,rally:u.added,flurry:t.flurry}))}}}class oe{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["jam_heal"],this.handler=(e,t,a,n,r)=>{var h;const l=(a.jammed||0)*b(100*.5*t.jam_heal,100*1.5*t.jam_heal)/100,u=a.addHeal(t.heal_cap?Math.min(t.heal_cap,l):l,t.flurry||1);u.value!==0&&((h=e.result)==null||h.logs.push({...r,type:d.HEAL,amount:u.value,prevented:u.prevented,flurry:t.flurry}))}}}class ue{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["heal_damage"],this.handler=(e,t,a,n,r)=>{var h;const l=(a.totalHeal||0)*(b(1e3*.5*t.heal_damage,1e3*1.5*t.heal_damage)/1e3),u=a.addDamage(n,t.damage_cap?Math.min(t.damage_cap,l):l,t.flurry||1);u.value!==0&&((h=e.result)==null||h.logs.push({...r,type:d.DAMAGE,amount:u.value,reduced:u.reduced,rally:u.added,flurry:t.flurry}))}}}class le{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["anti_attack"],this.handler=(e,t,a,n,r)=>{var i;a.other.unboostAttack(t.anti_attack),(i=e.result)==null||i.logs.push({...r,type:d.UNBOOST_ATTACK,amount:t.anti_attack})}}}class de{constructor(){this.applicablePhase=m.MAIN,this.applicableTags=["anti_defense"],this.handler=(e,t,a,n,r)=>{var i;a.other.unboostDefense(t.anti_defense),(i=e.result)==null||i.logs.push({...r,type:d.UNBOOST_DEFENSE,amount:t.anti_defense})}}}const ce=[new j,new q,new V,new J,new G,new W,new Y,new K,new z,new X,new Q,new Z,new ee,new te,new U,new F,new ae,new se,new ie,new ne,new re,new oe,new ue,new le,new de];class he{constructor(){this.handlers={},Object.values(m).forEach(e=>{this.handlers[e]={}})}registerDefaults(){this.registerHandlers(ce)}registerHandlers(e){e.forEach(t=>{this.register(t)})}register(e){const t=this.handlers[e.applicablePhase];t&&e.applicableTags.forEach(a=>{a in t||(t[a]=[]),t[a].push(e)})}getHandlers(e){return this.handlers[e]}}const E=class E{constructor(){this._config=void 0,this._result=void 0,this._state=void 0,this._skillHandler=new he,this.needDefaultSkills=!0}get config(){return this._config}set config(e){this._config=e}get result(){return this._result}set result(e){this._result=e}get state(){return this._state}set state(e){this._state=e}run(e){this.needDefaultSkills&&(this._skillHandler.registerDefaults(),this.needDefaultSkills=!1),this.config=this.ensureDefaultConfig(e),e.player1=$(e.player1,e.data),e.player2=$(e.player2,e.data),this.state=new B(e),this.result={player1:{baseDamage:0,totalDamage:0,power:0},player2:{baseDamage:0,totalDamage:0,power:0},logs:[]};for(const r of k)this.executePhase(r,0),this.executePhase(r,1);this.result.player1.power=this.config.epicMode?this.state.player1.baseAttack:this.state.player1.getAttack(),this.result.player2.power=this.config.epicMode?this.state.player2.baseDefense:this.state.player2.getDefense();const t=this.config.epicMode?E.PVE_MIN_DMG:E.PVP_MIN_DMG,a=this.state.maxBase/(this.config.epicMode?2.4+Math.random()/5:2+Math.random()),n=.75*this.state.maxBase*Math.log10(this.result.player1.power/this.result.player2.power);return this.result.player1.baseDamage=Math.round(Math.min(Math.max(a+n+1,t),this.state.maxBase)),this.result.player2.baseDamage=Math.round(Math.min(Math.max(a-n+1,1),this.state.maxBase)),this.result.player1.totalDamage=this.result.player1.baseDamage+this.state.player1.totalDamage-this.state.player2.totalHeal,this.result.player2.totalDamage=this.result.player2.baseDamage+this.state.player2.totalDamage-this.state.player1.totalHeal,this.result}registerSkillHandlers(e){this.needDefaultSkills=!1,this._skillHandler.registerHandlers(e)}executePhase(e,t){if(!this.config||!this.state||!this.result)return;const a=t===0?this.state.player1:this.state.player2;for(let n=0;n<a.force.length;n++){const r=a.force[n];if(r.definition.skills)for(const i of r.definition.skills)L(i.chance)&&a.checkRequirements(i.skill_id)&&this.executeSkill(e,i.skill_id,r,t)}a.phaseComplete()}executeSkill(e,t,a,n){var h;const r=(h=this.state)==null?void 0:h.forPlayer(n);if(!r||!this.config||!this.result)return;const i=this.config.data.skills[t],l={type:d.DAMAGE,skill_id:t,player_id:n,unit_id:a.unitId,is_reinforced:a.isReinforced},u=this._skillHandler.getHandlers(e);for(const p in u)if(p in i||i.custom&&p in i.custom)for(let s=0;s<u[p].length;s++)u[p][s].handler(this,i,r,a,l)}ensureDefaultConfig(e){return e.player1||(e.player1={}),e.player1.force||(e.player1.force={}),typeof e.player1.force!="string"&&(e.player1.force.units||(e.player1.force.units=[]),e.player1.force.reinforcements||(e.player1.force.reinforcements=[])),e.player1.power||(e.player1.power=I),e.player2||(e.player2={}),e.player2.force||(e.player2.force={}),typeof e.player2.force!="string"&&(e.player2.force.units||(e.player2.force.units=[]),e.player2.force.reinforcements||(e.player2.force.reinforcements=[])),e.player2.power||(e.player2.power=I),e.player2.level||(e.player2.level=x),e.epicMode=e.epicMode||!1,e.data||(e.data={}),e.data.units||(e.data.units=[]),e.data.skills||(e.data.skills=[]),e.data.types||(e.data.types=[]),e.data.subtypes||(e.data.subtypes=[]),e}};E.PVP_MIN_DMG=1,E.PVE_MIN_DMG=10;let C=E;const pe="other";function me(o,e,t={}){const a=["Your","Enemy's"],n=document.createElement("ul");o.logs.forEach(s=>{let c=[];const f=`${a[s.player_id]} ${s.is_reinforced?"reinforced ":""} ${e.units[s.unit_id].name}`;switch(s.type){case d.DAMAGE:c.push(y(s.player_id,`${f}                     used ${e.skills[s.skill_id].name},                      ${s.rally?`rallies for ${s.rally}, `:""}                     ${s.rally?`rallies for ${s.rally}, `:""}                     ${s.amount>=0?`dealing ${s.amount} damage`:`healing the enemy for ${-s.amount} health}`}`));break;case d.HEAL:s.prevented&&c.push(y(s.player_id,`${f} healing for ${s.amount} was prevented`)),c.push(y(s.player_id,`${f}                     used ${e.skills[s.skill_id].name},                     ${s.amount>=0?`healing for ${s.amount} health`:`damaging self for ${-s.amount} damage`}`));break;case d.JAM:c.push(y(s.player_id,`${f} ${s.success?`jammed ${e.units[s.target_unit_id].name}`:`'s Jam against ${e.units[s.target_unit_id].name} was prevented`}`));break;case d.CONTROL:c.push(y(s.player_id,`${f}                     ${s.success?"took control of":"failed to control"}                     ${e.units[s.unit_id].name}`));break;case d.PREVENT_JAM:c.push(y(s.player_id,`${f} will block ${s.amount} jam(s)`));break;case d.PREVENT_CONTROL:c.push(y(s.player_id,`${f} will block ${s.amount} control(s)`));break;case d.PREVENT_REINFORCEMENT:c.push(y(s.player_id,`${f} will block ${s.amount} reinforcements(s)`));break;case d.PREVENT_HEAL:c.push(y(s.player_id,`${f} will prevent up to ${s.amount} healing`));break;case d.ATTACK_POWER:c.push(y(s.player_id,`${f}                     used ${e.skills[s.skill_id].name},                     increasing Attack by ${100*s.amount}%!`));break;case d.DEFENSE_POWER:c.push(y(s.player_id,`${f}                     used ${e.skills[s.skill_id].name},                     increasing Defense by ${100*s.amount}%!`));break;case d.DAMAGE_BOOST:c.push(y(s.player_id,`${f}                     used ${e.skills[s.skill_id].name},                     increasing ${s.target_unit?e.units[s.target_unit].name:""}                     ${s.target_type?e.types[s.target_type].name:""}${s.target_subtype?e.subtypes[s.target_subtype].name:""}                     by ${100*s.amount}%!`));break;case d.REINFORCE:s.instances.forEach(_=>{_.success?c.push(y(s.player_id,`${f} brought ${_.amount}                             ${e.units[_.target_unit_id].name} into battle`)):c.push(y(s.player_id,`${a[s.player_id]} reinforce ${_.amount}                             ${e.units[_.target_unit_id].name} was prevented`))});break;case d.SUMMON:c.push(y(s.player_id,`${f} summoned ${s.amount}                     ${e.units[s.target_unit_id]} into battle`));break;case d.RALLY:c.push(y(s.player_id,`${f}                     used ${e.skills[s.skill_id].name}                     and rallies ${s.target_unit?e.units[s.target_unit].name:""}                     ${s.target_type?e.types[s.target_type].name:""}${s.target_subtype?e.subtypes[s.target_subtype].name:""}                     damage by ${s.amount} per attack`));break;case d.REDUCE:c.push(y(s.player_id,`${f}                     used ${e.skills[s.skill_id].name}                     and will reduce damage by ${s.amount} per attack`));break;case d.ANTISHIELD:c.push(y(s.player_id,`${f}                     used ${e.skills[s.skill_id].name}                     and will reduce enemy shield by ${s.amount}`));break;case d.UNBOOST_ATTACK:c.push(y(s.player_id,`${f}                     used ${e.skills[s.skill_id].name}                     reducing boosted enemy Attack by ${100*s.amount}%!`));break;case d.UNBOOST_DEFENSE:c.push(y(s.player_id,`${f}                     used ${e.skills[s.skill_id].name}                     reducing boosted enemy Defense by ${100*s.amount}%!`));break;default:s.custom in t&&c.splice(-1,0,...t[s.custom](s,e));break}c.forEach(_=>n.appendChild(_))});const r=y(0,`Your Force dealt ${o.player1.baseDamage} Damage. [${o.player1.power}]`);r.classList.add("space-above"),n.appendChild(r);const i=y(0,`Enemy Force dealt ${o.player2.baseDamage} Damage. [${o.player2.power}]`);n.appendChild(i);const l=y(0,"Total Damage Dealt");l.classList.add("space-above"),n.appendChild(l);const u=y(0,`You: ${Math.abs(o.player1.totalDamage)} ${o.player1.totalDamage<=0?"heal":"damage"}.`);n.appendChild(u);const h=y(0,`Enemy: ${Math.abs(o.player2.totalDamage)}  ${o.player2.totalDamage<=0?"heal":"damage"}.`);n.appendChild(h);const p=y(0,`You ${o.player1.totalDamage>=o.player2.totalDamage?"Won":"Lost"}!`);return n.appendChild(p),n}function y(o,e){const t=document.createElement("li");return o===1&&t.classList.add(pe),t.innerText=e,t}const S=document.createElement("template");S.innerHTML=`
  <style>
    :host {
      cursor: pointer;
    }

    [part="track"] {
      width: 2em;
      height: 1em;
      box-sizing: border-box;
      display: inline-block;
      line-height: 1;
      background-color: #dddddd;
      text-align: left;
    }

    [part="slider"] {
      box-sizing: border-box;
      display: inline-block;
      line-height: 1;
      width: 50%;
      height: 100%;
      background-color: #777777;
      vertical-align: text-top;
    }

    [part="pre-label"],[part="post-label"] {
      text-decoration: none;
    }

    [part="track"], [part="slider"] {
      transition: all 200ms;
    }

    :host([checked]) [part="slider"] {
      transform: translateX(100%);
    }

    :host(:not([checked])) [part="pre-label"] {
      text-decoration: underline;
    }
      :host([checked]) [part="post-label"] {
      text-decoration: underline;
    }
  </style>
  <span part="pre-label"></span>
  <span part="track">
    <span part="slider"></span>
  </span>
  <span part="post-label"></span>
`;const M=class M extends HTMLElement{constructor(){super(),this.toggle=()=>{this.checked=!this.checked},this._internals=this.attachInternals(),this.attachShadow({mode:"open"}).appendChild(S.content.cloneNode(!0))}connectedCallback(){this.setAttribute("role","switch"),this.setAttribute("tabindex","0"),this.addEventListener("click",this.toggle),this._internals.setFormValue(this.checked?"on":null)}disconnectedCallback(){this.removeEventListener("click",this.toggle)}attributeChangedCallback(e,t,a){var n,r;switch(e){case"checked":this.setAttribute("aria-checked",this.checked.toString()),this._updateFormValue(),this.dispatchEvent(new CustomEvent("toggle-switch:change",{detail:{checked:this.checked}}));break;case"pre-label":const i=(n=this.shadowRoot)==null?void 0:n.querySelector('[part="pre-label"]');i&&(i.textContent=a);break;case"post-label":const l=(r=this.shadowRoot)==null?void 0:r.querySelector('[part="post-label"]');l&&(l.textContent=a);break}}get checked(){return this.hasAttribute("checked")}set checked(e){this.toggleAttribute("checked",e)}_updateFormValue(){this._internals.setFormValue(this.checked?"on":null)}formDisabledCallback(e){e?this.setAttribute("disabled",""):this.removeAttribute("disabled")}formResetCallback(){this.checked=!1}formStateRestoreCallback(e){this.checked=e==="on"}};M.elementName="toggle-switch",M.observedAttributes=["checked","pre-label","post-label"],M.formAssociated=!0;let A=M;window.customElements.define(A.elementName,A);const T=class T extends HTMLSelectElement{constructor(){super(),this.bosses=[]}async attributeChangedCallback(e,t,a){e==="data-file"&&(this.bosses=await this.loadData(a),this.renderSelect())}async loadData(e){if(e)try{return(await(await fetch(e)).json()).bosses||[]}catch(t){console.error("Error loading data file:",t)}else console.error("No data file specified for BossSelect");return[]}renderSelect(e=this.bosses){this.innerHTML="";for(let t=0;t<e.length;t++){const a=e[t],n=document.createElement("option");n.value=a.name,n.textContent=a.name,this.appendChild(n)}this.options.length>0&&(this.selectedIndex=0)}get boss(){return this.getBoss()}getBoss(e){return typeof e!="string"&&(e=this.value),this.bosses.find(t=>t.name===e)??null}};T.elementName="boss-select",T.observedAttributes=["data-file"];let v=T;customElements.define(v.elementName,v,{extends:"select"});window.addEventListener("DOMContentLoaded",async()=>{var e,t;const o=await fe("simdata.json");(e=document.getElementById("boss-select"))==null||e.addEventListener("change",a=>{const n=a.target.getBoss();n&&(document.getElementById("force2").value=n.force||"",document.getElementById("power2").value=(n.stat*500).toString()||"",document.getElementById("level").value=n.level.toString()||"",document.getElementById("reinforcementConstraints").value=(n==null?void 0:n.reinforcementRestrictions)||"")}),(t=document.getElementById("battle-config"))==null||t.addEventListener("submit",function(a){a.preventDefault(),new FormData(document.getElementById("battle-config"));const n={player1:{force:document.getElementById("force1").value,power:parseFloat(document.getElementById("power1").value)},player2:{force:document.getElementById("force2").value,power:parseFloat(document.getElementById("power2").value),level:parseInt(document.getElementById("level").value,10),reinforcementConstraints:document.getElementById("reinforcementConstraints").value},epicMode:document.getElementById("mode-switch").checked,data:o};ye(n)})});function fe(o){return fetch(o).then(e=>{if(!e.ok)throw new Error(`Failed to load data file: ${e.statusText}`);return e.json()}).catch(e=>(console.error("Error loading data file:",e),{}))}function ye(o){const e=performance.now(),a=new C().run(o),n=performance.now();console.info("Execution time:",n-e,"ms");const r=me(a,o.data);console.log(a),console.log(r);const i=document.createElement("li");i.innerText=`(${n-e} ms)`,i.classList.add("space-above"),r.appendChild(i),document.body.appendChild(r),console.log("Battle executed with config:",o)}
